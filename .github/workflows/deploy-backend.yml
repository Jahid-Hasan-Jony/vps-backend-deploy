name: Deploy Backend (Node/Express → VPS)

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Show repo layout
        run: |
          pwd
          ls -la
          (command -v tree && tree -a -L 2 || true)

      # Ensure target dir exists before scp
      - name: SSH → prepare deploy dir
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            set -e
            mkdir -p "${{ secrets.SERVER_PATH }}"
            echo "Prepared: ${{ secrets.SERVER_PATH }}"
            ls -la "${{ secrets.SERVER_PATH }}" || true

      # scp-action@v0.1.7 ⇒ source এক লাইনে, কমা-সেপারেটেড থাকতে হবে
      - name: Copy backend files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "package.json,package-lock.json,server.js"
          target: ${{ secrets.SERVER_PATH }}
          overwrite: true
          debug: true

      - name: SSH → install deps & restart PM2 (env-safe + logs)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          # request_pty: true   # nvm দিয়ে চালালে PATH ইস্যু হলে আনকমেন্ট করুন
          script: |
            set -Eeuo pipefail

            DEPLOY_DIR="${{ secrets.SERVER_PATH }}"
            APP_NAME="${{ secrets.PM2_APP }}"

            echo "➤ Ensure Node.js/npm present (install if missing)"
            if ! command -v node >/dev/null 2>&1 || ! command -v npm >/dev/null 2>&1; then
              curl -fsSL https://deb.nodesource.com/setup_22.x | bash -
              apt-get install -y nodejs
            fi

            # nvm থাকলে লোড (না থাকলে harmless)
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" || true
            [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion" || true
            command -v npm >/dev/null 2>&1 && export PATH="$(npm bin -g):$PATH"

            echo "➤ Go to deploy dir"
            cd "$DEPLOY_DIR"
            pwd
            ls -la

            echo "➤ Write .env from secret"
            cat > .env << 'EOF'
            ${{ secrets.BACKEND_ENV }}
            EOF

            echo "➤ Export env from .env so PM2 inherits"
            set -a
            [ -f .env ] && . ./.env
            set +a

            echo "➤ Sanity env"
            echo "PORT=${PORT:-<not-set>}"

            echo "➤ Normalize ownership (optional)"
            chown -R "$USER:$USER" "$DEPLOY_DIR" || true

            echo "➤ Install production dependencies"
            if [ -f package-lock.json ]; then
              npm ci --omit=dev
            else
              npm install --production
            fi

            ENTRY_FILE="$DEPLOY_DIR/server.js"
            if [ ! -f "$ENTRY_FILE" ]; then
              echo "❌ Entry not found: $ENTRY_FILE"
              ls -la
              exit 1
            fi

            echo "➤ Start/Restart PM2: $APP_NAME"
            set +e
            if pm2 describe "$APP_NAME" >/dev/null 2>&1; then
              pm2 restart "$APP_NAME" --update-env
              PM2_RC=$?
            else
              pm2 start "$ENTRY_FILE" --name "$APP_NAME" --cwd "$DEPLOY_DIR"
              PM2_RC=$?
            fi
            set -e

            echo "➤ PM2 return code: $PM2_RC"
            pm2 ls || true
            echo "➤ Tail recent logs"
            pm2 logs "$APP_NAME" --lines 120 --nostream || true

            if [ "$PM2_RC" -ne 0 ]; then
              echo "❌ PM2 start/restart failed with code $PM2_RC"
              exit "$PM2_RC"
            fi

            pm2 save
            echo "➤ Deploy complete!"
